<p class="para_info">Lorem ipsum dolor sit amet consectetur adipisicing elit. </p>
    <p class="para">Burhan Change the class name using setAttribute</p>
    <p id="para2">Nazneen Change the class name using setAttribute</p>
<script>
    // Get Attribute id 
    let box_id = document.querySelector("div");
    console.log(box_id);
    let get_att = box_id.getAttribute("id");
    console.log(get_att);
    let head = box_id.getAttribute("name");
    console.log(head);
    let para = document.querySelector("p")
    console.log(para.getAttribute("class"));
    
    // Set Attribute value
    let info = document.querySelector(".para");
    console.log(info.setAttribute("class","newClass"));
    let div_changes = document.querySelector("div");
    div_changes.style.backgroundColor = "Blue";
    div_changes.style.fontSize = "20px";
    div_changes.style.color = "white";
    div_changes.style.lineHeight = "100px"
    div_changes.style.alignItems = "center";
    div_changes.innerHTML = "text";
    
    // inset Element & Create a Button Using Create element
    let newBtn = document.createElement("button");
    newBtn.innerText = "Click Me";
    console.log(newBtn);
    let div = document.getElementById("box2")
    //div.append(newBtn); // Display on last 
    // div.prepend(newBtn); // Display on First
    //div.before(newBtn); // Display Before div
    div.after(newBtn); //Display After div
    
    // Create Heading & Display on Page
    let newHeading =  document.createElement("h1");
    newHeading.innerText = "My Name is Burhan";
    console.log(newHeading);
    let para_display = document.getElementById("para2");
    para_display.after(newHeading);
   
   // Remove Element
   let remove_element = document.getElementById("para2");
   remove_element.remove();
   newHeading.remove();
   newBtn.remove();
</script>

****â˜…***************************$*************

package com.demo.cnfg;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

@FeignClient(name = "score-microservice", url = "http://localhost:8888")
public interface ScoreFeignClient {
	@GetMapping("/getTotalScore")
	int getTotalScore(@RequestParam int score1, @RequestParam int score2, @RequestParam int score3);
}

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.demo.service.GradeService;

@RestController
public class GradeController {

	@Autowired
	GradeService gradeService;

	@GetMapping("/getTotalScore")
	String getTotalScore(@RequestParam int score1, @RequestParam int score2, @RequestParam int score3) {

		return gradeService.getGrade(score1, score2, score3);
	}

}


<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.demo</groupId>
	<artifactId>score-microservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>score-microservice</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.13.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud-services.version>2.1.7.RELEASE
		</spring-cloud-services.version>
		<spring-cloud.version>Greenwich.SR5</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-config</artifactId> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<!-- jpa integration with spring -->
		<!--<dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-data-jpa</artifactId> -->
		<!--</dependency> -->
		<!-- in memory database -->
		<!--<dependency> -->
		<!-- <groupId>com.h2database</groupId> -->
		<!-- <artifactId>h2</artifactId> -->
		<!--</dependency> -->
		<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-devtools</artifactId>
		<scope>runtime</scope>
		<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>${spring-cloud-services.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>








--------***************************************************------------------
let arr_info = [100,2003,200,031];
let discount = 0.5;
for(let i = 0 ; i < arr_info.length; i++){
let discount_value = arr_info[i] - (arr_info[i] * discount);
	arr_info[i] = discount_value;
}
console.log(arr_info);

Discount without method 
------------------------------------

double arr[] = {100,200,300,700,650};	
for (double d : arr) 
{
	System.out.print(d*0.9+",");
}






<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.demo</groupId>
	<artifactId>score-microservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>score-microservice</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.13.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud-services.version>2.1.7.RELEASE
		</spring-cloud-services.version>
		<spring-cloud.version>Greenwich.SR5</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-config</artifactId> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<!-- jpa integration with spring -->
		<!--<dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-data-jpa</artifactId> -->
		<!--</dependency> -->
		<!-- in memory database -->
		<!--<dependency> -->
		<!-- <groupId>com.h2database</groupId> -->
		<!-- <artifactId>h2</artifactId> -->
		<!--</dependency> -->
		<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-devtools</artifactId>
		<scope>runtime</scope>
		<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>${spring-cloud-services.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>








--------***************************************************------------------
let arr_info = [100,2003,200,031];
let discount = 0.5;
for(let i = 0 ; i < arr_info.length; i++){
let discount_value = arr_info[i] - (arr_info[i] * discount);
	arr_info[i] = discount_value;
}
console.log(arr_info);

Discount without method 
------------------------------------

double arr[] = {100,200,300,700,650};	
for (double d : arr) 
{
	System.out.print(d*0.9+",");
}
